const t="api/ssfreedom";class s{constructor(t=fetch.bind(window)){this.fetch=t}async getOptionsForm(t,s){const i=await this.fetch(this.apiUrlFor("getOptionsForm")+`?class=${t}&id=${s}`,{method:"GET",credentials:"include"});if(i.ok)return await i.text();throw i}async updateObject(t,s,i){const e=await this.fetch(this.apiUrlFor("updateObject"),{method:"PATCH",credentials:"include",body:JSON.stringify({class:t,id:s,data:i})});if(e.ok)return await e.text();throw e}async publishObject(t,s){const i=await this.fetch(this.apiUrlFor("publishObject"),{method:"POST",credentials:"include",body:JSON.stringify({class:t,id:s})});if(i.ok)return await i.text();throw i}async getLinkList(){const t=await this.fetch(this.apiUrlFor("getLinkList"),{method:"GET",credentials:"include"});if(t.ok)return await t.json();throw t}apiUrlFor(s){return`${t}/${s}`}}class i{static getElementConfiguration(t){return JSON.parse(t.dataset.ssFreedomField)}static getObjectDataForFieldElement(t){const s=t.closest("[data-ss-freedom-object]"),i=JSON.parse(s.dataset.ssFreedomObject);return{class:i.class,id:i.id}}}export{s as A,i as E};