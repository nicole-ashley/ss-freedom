import{d as t}from"./p-2aed5326.js";const e="api/ssfreedom";class s{constructor(t=fetch.bind(window)){this.fetch=t}async getOptionsForm(t,e){const s=await this.fetch(this.apiUrlFor("get_options_form")+`?class=${t}&id=${e}`,{method:"GET",credentials:"include"});return await s.text()}async updateObject(t,e,s){const i=await this.fetch(this.apiUrlFor("update_object"),{method:"PATCH",credentials:"include",body:JSON.stringify({class:t,id:e,data:s})});return await i.text()}apiUrlFor(t){return`${e}/${t}`}}class i{static getElementConfiguration(t){return JSON.parse(t.dataset.ssFreedomField)}static getObjectDataForFieldElement(t){const e=t.closest("[data-ss-freedom-object]"),s=JSON.parse(e.dataset.ssFreedomObject);return{class:s.class,id:s.id}}}class a{static getTinyMceConfigurations(){return window.NikRolls.SsFreedom.configurations}constructor(t=MutationObserver,e=document.documentElement,i=null){this.observer=new t(t=>this.observerCallback(t)),this.htmlElement=e,this.apiService=i||new s,this.getTinyMce()}observeDom(){this.observer.observe(this.htmlElement,{attributes:!0,childList:!0,subtree:!0}),Array.from(this.htmlElement.querySelectorAll("[data-ss-freedom-field]")).forEach(t=>this.initialiseEditorIfNecessary(t))}observerCallback(t){t.forEach(async t=>{"attributes"===t.type&&"data-ss-freedom-field"===t.attributeName?this.initialiseEditorIfNecessary(t.target):"childList"===t.type&&Array.from(t.addedNodes).forEach(t=>{if(t instanceof HTMLElement){const e=Array.from(t.querySelectorAll("[data-ss-freedom-field]"));t.dataset&&t.dataset.ssFreedomField&&e.push(t),e.forEach(t=>this.initialiseEditorIfNecessary(t))}}),(await this.tinyMce).editors.forEach(t=>{t.getBody()&&!document.body.contains(t.getBody())&&t.destroy()})})}async initialiseEditorIfNecessary(t){if(t.dataset.ssFreedomField&&!(await this.tinyMce).editors.find(e=>e.getBody()===t)){const e=i.getElementConfiguration(t);a.getTinyMceConfigurations()[e.type]&&await this.initialiseTinyMceConfiguration(e.type,t)}}async initialiseTinyMceConfiguration(t,e){const s=a.getTinyMceConfigurations(),i=[],n=Object.assign({},s.all,s[t],{target:e,setup:t=>i.forEach(e=>e(t)),init_instance_callback:t=>{t.on("Change",t=>this.onChange(t)),a.updateEmptyFlag(t)}});if(n.class_selection_options){const t=n.class_selection_options;delete n.class_selection_options,i.push(e=>this.createTinyMceOptionsMenu(e,t))}return(await this.tinyMce).init(n)}getTinyMce(){this.tinyMce=new Promise(t=>{const e=window.setInterval(()=>{window.tinymce&&(window.clearInterval(e),t(window.tinymce))})})}async onChange(t){a.updateEmptyFlag(t.target),await this.updateCmsWithLatestData(t.target)}createTinyMceOptionsMenu(t,e){t.ui.registry.addMenuButton("classselectionoptions",{text:"Options",fetch:s=>{s(e.reduce((e,s)=>{const i=t.selection.getNode().closest(s.selector),a=t.getBody().contains(i);return i&&a&&e.push({type:"nestedmenuitem",text:s.name,getSubmenuItems:()=>{const t=s.classes,e=Object.keys(t),a=Object.values(t).filter(t=>!!t),n=e.find(e=>null===t[e]),o=e.find(e=>i.classList.contains(t[e]))||n;return e.map(e=>({type:"menuitem",text:e,icon:e===o?"checkmark":void 0,onAction:()=>{i.classList.remove(...a),t[e]&&i.classList.add(t[e])}}))}}),e},[]))}})}static updateEmptyFlag(t){const e=t.getBody();t.getContent().trim()?e.classList.remove("ss-freedom-empty"):e.classList.add("ss-freedom-empty")}async updateCmsWithLatestData(t){const e=i.getObjectDataForFieldElement(t.getBody()),s={};return s[i.getElementConfiguration(t.getBody()).name]=t.getContent(),await this.apiService.updateObject(e.class,e.id,s)}}class n{constructor(e){t(this,e)}componentWillLoad(){(new a).observeDom()}render(){}}export{n as ss_freedom_admin_widget};